module.exports = {
  env: {
    es2021: true,
    commonjs: true,
    node: true,
    "jest/globals": true,
  },
  extends: [
    "eslint:recommended",
    "prettier",
    "plugin:@typescript-eslint/recommended",
  ],
  ignorePatterns: ["dist/*"],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaVersion: 12,
    sourceType: "module",
    project: "./tsconfig.json",
  },
  plugins: ["jest", "@typescript-eslint"],
  settings: {
    "import/resolver": {
      node: {
        extensions: [".js", ".jsx", ".ts", ".tsx"],
      },
    },
  },

  rules: {
    "import/extensions": "off",
    "import/no-named-as-default-member": "off",
    "no-console": process.env.NODE_ENV === "production" ? "error" : "off",
    "@typescript-eslint/no-namespace": "off",
    "no-shadow": "off",
    "no-param-reassign": ["error", { props: false }],
    "arrow-body-style": ["error", "as-needed"],
    "no-return-await": "off",
    "no-unused-vars": "off",
    "require-await": "off",
    camelcase: ["error", { properties: "always" }],
    "max-len": ["error", { code: 150 }],
    "default-case": "error",
    "no-throw-literal": "error",
    "no-var": "error",
    eqeqeq: "error",
    "prefer-const": "error",
    "valid-jsdoc": "error",
    "prefer-template": "error",
    "no-unneeded-ternary": "error",
    "no-else-return": "error",
    "consistent-return": "error",
    "no-useless-return": "error",
    "max-params": ["error", 3],
    "no-cond-assign": ["error", "always"],
    "linebreak-style": ["error", "unix"],
    quotes: ["off", "double"],
    semi: ["off", "always"],
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        selector: "enumMember",
        format: ["camelCase", "PascalCase", "UPPER_CASE"],
      },
    ],
    "@typescript-eslint/typedef": [
      "error",
      {
        arrowParameter: true,
        variableDeclaration: false,
        memberVariableDeclaration: false,
      },
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        types: {
          String: false,
          Boolean: false,
          Number: false,
          Symbol: false,
          "{}": false,
          Object: false,
          object: false,
          Function: false,
        },
        extendDefaults: true,
      },
    ],
    "jest/no-disabled-tests": "warn",
    "jest/no-focused-tests": "error",
    "jest/no-identical-title": "error",
    "jest/prefer-to-have-length": "warn",
    "jest/valid-expect": "error",
  },
};
