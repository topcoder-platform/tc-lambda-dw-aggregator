useDotenv: true

service: ${env:AWS_SERVICE_NAME}
provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs14.x
  versionFunctions: false
  region: ${env:AWS_REGION_INSTANCE}
  apiName: ${env:AWS_SERVICE_NAME}
  memorySize: 6144
  logRetentionInDays: 30
  apiGateway:
    minimumCompressionSize: 1024
  # vpc:
  #   securityGroupIds:
  #     - ${file(./config/${self:provider.stage}.json):VPC_SECURITY_GROUP_ID_1}
  #     - ${file(./config/${self:provider.stage}.json):VPC_SECURITY_GROUP_ID_2}
  #   subnetIds:
  #     - ${file(./config/${self:provider.stage}.json):VPC_SUBNET_ID_1}
  # role: ${file(./config/${self:provider.stage}.json):LAMBDA_ROLE}
  iam:
    role:
      statements:
        # Allow functions to list all buckets
        - Effect: Allow
          Action: "s3:*"
          Resource: "*"
  deploymentBucket:
    blockPublicAccess: true
    name: ${env:AWS_DEPLOYMENT_BUCKET}
resources:
  Description: ${env:AWS_SERVICE_NAME}
package:
  include:
    - "src/**;"
    - "package.json"
  exclude:
    - coverage/**
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    packager: "yarn"
    includeModules: true
  serverless-offline:
    lambdaPort: 7003
    noPrependStageInUrl: true
functions:
  zipper:
    handler: src/handlers/handler.handler
    events:
      - http:
          path: /zipper
          method: post
  monthlyZipper:
    handler: src/handlers/handler.zipMonthly
    events:
      - http:
          path: /zipMonthly
          method: post
  yearlyZipper:
    handler: src/handlers/handler.zipYearly
    events:
      - http:
          path: /zipYearly
          method: post
  zipAll:
    handler: src/handlers/handler.zipAll
    events:
      - http:
          path: /zipAll
          method: post

plugins:
  - serverless-webpack
  - serverless-jest-plugin
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-deployment-bucket
